<!-- mentorpia1.sdf -->
<sdf version="1.8">
  <model name="mentorpia1">
    <!-- The model pose itself can remain (0,0,0) or whatever starting pose you want. -->
    <pose>0 0 0 0 0 0</pose>
    <static>false</static>

    <!-- Base Footprint (root link) -->
    <link name="base_footprint">
      <!-- Put base_footprint at the model origin -->
      <pose>0 0 0 0 0 0</pose>
    </link>
    <!-- This joint is fixed, but we no longer store an offset here. -->
    <joint name="base_footprint_to_base_link" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
    </joint>

    <!-- Base Link -->
    <link name="base_link">
      <!-- In URDF, the offset from base_footprint to base_link is (0 0 0.07). -->
      <pose relative_to="base_footprint">0 0 0.07 0 0 0</pose>
      <inertial>
        <mass>0.0961047465616957</mass>
        <inertia>
          <ixx>8.55867486364231e-05</ixx>
          <iyy>0.000277248181555496</iyy>
          <izz>0.000344246448853775</izz>
          <ixy>3.41346959938296e-08</ixy>
          <ixz>1.64755227278164e-05</ixz>
          <iyz>-2.95282759133104e-08</iyz>
        </inertia>
      </inertial>
      <visual name="base_link_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/base_link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="base_link_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/base_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>

    <!-- Back Axle (fixed to base_link) -->
    <link name="back_axle">
      <!-- URDF joint "base_to_back_axle" had <origin xyz="0 0 0"/> -->
      <pose relative_to="base_link">0 0 0 0 0 0</pose>
    </link>
    <joint name="base_to_back_axle" type="fixed">
      <parent>base_link</parent>
      <child>back_axle</child>
    </joint>

    <!-- Left Back Wheel -->
    <link name="wheel_lb_Link">
      <!-- URDF joint "wheel_lb_Joint" had origin xyz="-0.07 0.07 -0.03" relative to back_axle -->
      <pose relative_to="back_axle">-0.07 0.07 -0.03 0 0 0</pose>
      <inertial>
        <mass>0.0271078161230754</mass>
        <inertia>
          <ixx>1.01056035703468e-05</ixx>
          <iyy>1.67990600599721e-05</iyy>
          <izz>1.01072652738793e-05</izz>
          <ixy>4.60479373806495e-11</ixy>
          <ixz>7.43896782806142e-10</ixz>
          <iyz>-5.763890541079e-11</iyz>
        </inertia>
      </inertial>
      <visual name="wheel_lb_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_lb_Link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="wheel_lb_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_lb_Link.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <!-- The wheel joint is now just revolute, with no pose. The link offset is above. -->
    <joint name="wheel_lb_Joint" type="revolute">
      <parent>back_axle</parent>
      <child>wheel_lb_Link</child>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <!-- Right Back Wheel -->
    <link name="wheel_rb_Link">
      <!-- URDF joint "wheel_rb_Joint" origin xyz="-0.07 -0.07 -0.03" relative to back_axle -->
      <pose relative_to="back_axle">-0.07 -0.07 -0.03 0 0 0</pose>
      <inertial>
        <mass>0.0271078005024283</mass>
        <inertia>
          <ixx>1.01044417409685e-05</ixx>
          <iyy>1.67993271276785e-05</iyy>
          <izz>1.01087182681654e-05</izz>
          <ixy>-5.83069005452564e-11</ixy>
          <ixz>-7.56886841840775e-11</ixz>
          <iyz>6.31638424138502e-11</iyz>
        </inertia>
      </inertial>
      <visual name="wheel_rb_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_rb_Link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="wheel_rb_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_rb_Link.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="wheel_rb_Joint" type="revolute">
      <parent>back_axle</parent>
      <child>wheel_rb_Link</child>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <!-- Front Axle (steering pivot) -->
    <link name="front_axle">
      <!-- URDF "steering_wheel_joint" has xyz="0.07 0 -0.03" from base_link -->
      <pose relative_to="base_link">0.07 0 -0.03 0 0 0</pose>
    </link>
    <joint name="steering_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_axle</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-0.4</lower>
          <upper>0.4</upper>
          <effort>10</effort>
          <velocity>1</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Left Steering Link -->
    <link name="left_steering_link">
      <!-- URDF "left_steering_joint" origin xyz="0 0.07 0" from front_axle -->
      <pose relative_to="front_axle">0 0.07 0 0 0 0</pose>
    </link>
    <joint name="left_steering_joint" type="revolute">
      <parent>front_axle</parent>
      <child>left_steering_link</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-0.4</lower>
          <upper>0.4</upper>
          <effort>10</effort>
          <velocity>1</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Right Steering Link -->
    <link name="right_steering_link">
      <!-- URDF "right_steering_joint" origin xyz="0 -0.07 0" -->
      <pose relative_to="front_axle">0 -0.07 0 0 0 0</pose>
    </link>
    <joint name="right_steering_joint" type="revolute">
      <parent>front_axle</parent>
      <child>right_steering_link</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-0.4</lower>
          <upper>0.4</upper>
          <effort>10</effort>
          <velocity>1</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Left Front Wheel -->
    <link name="wheel_lf_Link">
      <!-- URDF "wheel_lf_Joint" origin xyz="0 0 0" from left_steering_link -->
      <pose relative_to="left_steering_link">0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.0252873083503169</mass>
        <inertia>
          <ixx>1.00371783485335e-05</ixx>
          <iyy>1.67620175120314e-05</iyy>
          <izz>1.00370342405297e-05</izz>
          <ixy>4.93900109379125e-11</ixy>
          <ixz>7.42104604492639e-10</ixz>
          <iyz>-5.47583950457701e-11</iyz>
        </inertia>
      </inertial>
      <visual name="wheel_lf_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_lf_Link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="wheel_lf_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_lf_Link.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="wheel_lf_Joint" type="revolute">
      <parent>left_steering_link</parent>
      <child>wheel_lf_Link</child>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <!-- Right Front Wheel -->
    <link name="wheel_rf_Link">
      <!-- URDF "wheel_rf_Joint" origin xyz="0 0 0" from right_steering_link -->
      <pose relative_to="right_steering_link">0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.0252873548617242</mass>
        <inertia>
          <ixx>1.00360241846408e-05</ixx>
          <iyy>1.67622954977732e-05</iyy>
          <izz>1.00384960556047e-05</izz>
          <ixy>-5.83065201444192e-11</ixy>
          <ixz>-8.3023958781985e-11</ixz>
          <iyz>6.31638512668579e-11</iyz>
        </inertia>
      </inertial>
      <visual name="wheel_rf_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_rf_Link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="wheel_rf_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/wheel_rf_Link.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="wheel_rf_Joint" type="revolute">
      <parent>right_steering_link</parent>
      <child>wheel_rf_Link</child>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <!-- Lidar Sensor Link -->
    <link name="lidar_frame">
      <!-- URDF "lidar_Joint" origin xyz="-0.0096019 -0.00008533 0.092501" from base_link -->
      <pose relative_to="base_link">-0.0096019 -0.00008533 0.092501 0 0 0</pose>
      <inertial>
        <mass>0.0405423044068563</mass>
        <inertia>
          <ixx>4.98470776877503e-06</ixx>
          <iyy>5.03926730822203e-06</iyy>
          <izz>8.25645669548359e-06</izz>
          <ixy>-1.54076264166869e-07</ixy>
          <ixz>2.05182706824286e-09</ixz>
          <iyz>1.1006285118993e-08</iyz>
        </inertia>
      </inertial>
      <visual name="lidar_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/lidar_Link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="lidar_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/lidar_Link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <sensor name="lidar" type="gpu_lidar">
        <topic>lidar</topic>
        <update_rate>5.0</update_rate>
        <lidar>
          <scan>
            <horizontal>
              <samples>2000</samples>
              <resolution>1</resolution>
              <min_angle>-3.141592</min_angle>
              <max_angle>3.141592</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.2</min>
            <max>12.0</max>
            <resolution>0.01</resolution>
          </range>
        </lidar>
        <visualize>false</visualize>
      </sensor>
    </link>
    <joint name="lidar_Joint" type="fixed">
      <parent>base_link</parent>
      <child>lidar_frame</child>
    </joint>

    <!-- Camera Link -->
    <link name="camera_link">
      <!-- URDF "cam_Joint": origin xyz="0.064015 -0.00013463 0.051155" from base_link -->
      <pose relative_to="base_link">0.064015 -0.00013463 0.051155 0 0 0</pose>
      <inertial>
        <mass>0.01</mass>
        <inertia>
          <ixx>0.001</ixx>
          <iyy>0.001</iyy>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <visual name="camera_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/cam_Link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0 0 0 1</specular>
        </material>
      </visual>
      <collision name="camera_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://mentorpia1_simulator/meshes/acker/cam_Link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <sensor name="rgbd_camera" type="rgbd_camera">
        <camera>
          <horizontal_fov>1.25</horizontal_fov>
          <image>
            <width>848</width>
            <height>640</height>
          </image>
          <clip>
            <near>0.3</near>
            <far>15</far>
          </clip>
          <optical_frame_id>camera_link_optical</optical_frame_id>
        </camera>
        <always_on>1</always_on>
        <update_rate>20</update_rate>
        <visualize>true</visualize>
        <topic>camera</topic>
        <!-- SDF doesn't formally define <gz_frame_id>, but GzSim will just ignore or warn -->
        <gz_frame_id>camera_link</gz_frame_id>
      </sensor>
    </link>
    <joint name="cam_Joint" type="fixed">
      <parent>base_link</parent>
      <child>camera_link</child>
    </joint>

    <!-- Optical sub-link for the camera, fixed at the same pose -->
    <link name="camera_link_optical">
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.01</mass>
        <inertia>
          <ixx>0.001</ixx>
          <iyy>0.001</iyy>
          <izz>0.001</izz>
        </inertia>
      </inertial>
    </link>
    <joint name="joint_camera_link_optical" type="fixed">
      <parent>camera_link</parent>
      <child>camera_link_optical</child>
    </joint>

    <!-- IMU Link -->
    <link name="imu_link">
      <!-- URDF "imu_joint" origin is xyz="0 0 0.11159" rpy="0 0 -1.5708" from base_link -->
      <pose relative_to="base_link">0 0 0.11159 0 0 -1.5708</pose>
      <sensor name="imu" type="imu">
        <always_on>1</always_on>
        <update_rate>50</update_rate>
        <visualize>false</visualize>
        <topic>imu</topic>
      </sensor>
    </link>
    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
    </joint>

    <!-- Ackermann Steering Plugin -->
    <!-- <plugin filename="gz-sim-ackermann-steering-system" name="gz::sim::systems::AckermannSteering">
      <steering_joint>steering_wheel_joint</steering_joint>
      <wheel_joints>
        <front_left_wheel>wheel_lf_Joint</front_left_wheel>
        <front_right_wheel>wheel_rf_Joint</front_right_wheel>
        <back_left_wheel>wheel_lb_Joint</back_left_wheel>
        <back_right_wheel>wheel_rb_Joint</back_right_wheel>
      </wheel_joints>
      <wheel_separation>0.14</wheel_separation>
      <wheel_radius>0.05</wheel_radius>
      <odom_publish_frequency>10</odom_publish_frequency>
      <topic>cmd_vel</topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
      <max_velocity>1.0</max_velocity>
      <max_acceleration>3.2</max_acceleration>
    </plugin> -->

    <!-- Diff Drive Plugin (approximate ackermann as diff) -->
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <!-- Joints to treat as left wheels (both front and rear left) -->
      <left_joint>wheel_lb_Joint</left_joint>
      <left_joint>wheel_lf_Joint</left_joint>
      <!-- Joints to treat as right wheels (both front and rear right) -->
      <right_joint>wheel_rb_Joint</right_joint>
      <right_joint>wheel_rf_Joint</right_joint>

      <!-- Robot dimensions -->
      <wheel_separation>0.28</wheel_separation>
      <wheel_radius>0.05</wheel_radius>

      <!-- Listen for a standard Twist on this GZ Transport topic -->
      <topic>cmd_vel</topic>
    </plugin>


    <!-- Joint State Publisher Plugin -->
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher"/>
  </model>
</sdf>
